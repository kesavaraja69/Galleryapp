///
/// Code generated by jsonToDartModel http://json.fluttergeeks.in/
///
class Fetchimagesdatamodel {
/*
{
  "id": 9024866,
  "pageURL": "https://pixabay.com/illustrations/tortoise-animal-reptile-turtle-9024866/",
  "type": "illustration",
  "tags": "tortoise, animal, reptile",
  "previewURL": "https://cdn.pixabay.com/photo/2024/09/05/12/48/tortoise-9024866_150.jpg",
  "previewWidth": 150,
  "previewHeight": 86,
  "webformatURL": "https://pixabay.com/get/gfcc067f0515ac81c8d5a567a153e44ce222ae698647265117a4d428699e49659f3db4c31269134d97902815f0b52affadf98de22511540ed4ed1b46310c4df44_640.jpg",
  "webformatWidth": 640,
  "webformatHeight": 366,
  "largeImageURL": "https://pixabay.com/get/gc2f324bc9f17858b4a35b1ef9795923a160669daa1d9f0c98f3b48f70cb02d68c2c8d1ebfe5ba6aec77cbb235ca70cadcc32db447312f6e72819a9dbf7270ef3_1280.jpg",
  "imageWidth": 10173,
  "imageHeight": 5813,
  "imageSize": 5209562,
  "views": 2137,
  "downloads": 1697,
  "collections": 67,
  "likes": 46,
  "comments": 2,
  "user_id": 13452116,
  "user": "Syaibatulhamdi",
  "userImageURL": "https://cdn.pixabay.com/user/2023/08/17/09-25-12-704_250x250.jpg"
} 
*/

  int? id;
  String? pageURL;
  String? type;
  String? tags;
  String? previewURL;
  int? previewWidth;
  int? previewHeight;
  String? webformatURL;
  int? webformatWidth;
  int? webformatHeight;
  String? largeImageURL;
  int? imageWidth;
  int? imageHeight;
  int? imageSize;
  int? views;
  int? downloads;
  int? collections;
  int? likes;
  int? comments;
  int? userId;
  String? user;
  String? userImageURL;

  Fetchimagesdatamodel({
    this.id,
    this.pageURL,
    this.type,
    this.tags,
    this.previewURL,
    this.previewWidth,
    this.previewHeight,
    this.webformatURL,
    this.webformatWidth,
    this.webformatHeight,
    this.largeImageURL,
    this.imageWidth,
    this.imageHeight,
    this.imageSize,
    this.views,
    this.downloads,
    this.collections,
    this.likes,
    this.comments,
    this.userId,
    this.user,
    this.userImageURL,
  });
  Fetchimagesdatamodel.fromJson(Map<String, dynamic> json) {
    id = int.tryParse(json['id']?.toString() ?? '');
    pageURL = json['pageURL']?.toString();
    type = json['type']?.toString();
    tags = json['tags']?.toString();
    previewURL = json['previewURL']?.toString();
    previewWidth = int.tryParse(json['previewWidth']?.toString() ?? '');
    previewHeight = int.tryParse(json['previewHeight']?.toString() ?? '');
    webformatURL = json['webformatURL']?.toString();
    webformatWidth = int.tryParse(json['webformatWidth']?.toString() ?? '');
    webformatHeight = int.tryParse(json['webformatHeight']?.toString() ?? '');
    largeImageURL = json['largeImageURL']?.toString();
    imageWidth = int.tryParse(json['imageWidth']?.toString() ?? '');
    imageHeight = int.tryParse(json['imageHeight']?.toString() ?? '');
    imageSize = int.tryParse(json['imageSize']?.toString() ?? '');
    views = int.tryParse(json['views']?.toString() ?? '');
    downloads = int.tryParse(json['downloads']?.toString() ?? '');
    collections = int.tryParse(json['collections']?.toString() ?? '');
    likes = int.tryParse(json['likes']?.toString() ?? '');
    comments = int.tryParse(json['comments']?.toString() ?? '');
    userId = int.tryParse(json['user_id']?.toString() ?? '');
    user = json['user']?.toString();
    userImageURL = json['userImageURL']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['pageURL'] = pageURL;
    data['type'] = type;
    data['tags'] = tags;
    data['previewURL'] = previewURL;
    data['previewWidth'] = previewWidth;
    data['previewHeight'] = previewHeight;
    data['webformatURL'] = webformatURL;
    data['webformatWidth'] = webformatWidth;
    data['webformatHeight'] = webformatHeight;
    data['largeImageURL'] = largeImageURL;
    data['imageWidth'] = imageWidth;
    data['imageHeight'] = imageHeight;
    data['imageSize'] = imageSize;
    data['views'] = views;
    data['downloads'] = downloads;
    data['collections'] = collections;
    data['likes'] = likes;
    data['comments'] = comments;
    data['user_id'] = userId;
    data['user'] = user;
    data['userImageURL'] = userImageURL;
    return data;
  }
}

class Fetchimagesdata {
/*
{
  "total": 1913110,
  "totalHits": 500,
  "hits": [
    {
      "id": 9024866,
      "pageURL": "https://pixabay.com/illustrations/tortoise-animal-reptile-turtle-9024866/",
      "type": "illustration",
      "tags": "tortoise, animal, reptile",
      "previewURL": "https://cdn.pixabay.com/photo/2024/09/05/12/48/tortoise-9024866_150.jpg",
      "previewWidth": 150,
      "previewHeight": 86,
      "webformatURL": "https://pixabay.com/get/gfcc067f0515ac81c8d5a567a153e44ce222ae698647265117a4d428699e49659f3db4c31269134d97902815f0b52affadf98de22511540ed4ed1b46310c4df44_640.jpg",
      "webformatWidth": 640,
      "webformatHeight": 366,
      "largeImageURL": "https://pixabay.com/get/gc2f324bc9f17858b4a35b1ef9795923a160669daa1d9f0c98f3b48f70cb02d68c2c8d1ebfe5ba6aec77cbb235ca70cadcc32db447312f6e72819a9dbf7270ef3_1280.jpg",
      "imageWidth": 10173,
      "imageHeight": 5813,
      "imageSize": 5209562,
      "views": 2137,
      "downloads": 1697,
      "collections": 67,
      "likes": 46,
      "comments": 2,
      "user_id": 13452116,
      "user": "Syaibatulhamdi",
      "userImageURL": "https://cdn.pixabay.com/user/2023/08/17/09-25-12-704_250x250.jpg"
    }
  ]
} 
*/

  int? total;
  int? totalHits;
  List<Fetchimagesdatamodel?>? hits;

  Fetchimagesdata({
    this.total,
    this.totalHits,
    this.hits,
  });
  Fetchimagesdata.fromJson(Map<String, dynamic> json) {
    total = int.tryParse(json['total']?.toString() ?? '');
    totalHits = int.tryParse(json['totalHits']?.toString() ?? '');
    if (json['hits'] != null && (json['hits'] is List)) {
      final v = json['hits'];
      final arr0 = <Fetchimagesdatamodel>[];
      v.forEach((v) {
        arr0.add(Fetchimagesdatamodel.fromJson(v));
      });
      hits = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['total'] = total;
    data['totalHits'] = totalHits;
    if (hits != null) {
      final v = hits;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['hits'] = arr0;
    }
    return data;
  }
}
